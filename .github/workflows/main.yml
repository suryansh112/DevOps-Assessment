name: Pearlthoughts

on: 
  workflow_dispatch:
    inputs:
      command: 
        description: "Terraform apply or destroy"
        required: true
        default: apply
        type: choice
        options:
        - apply
        - destroy
        - nochange
      dockerpush:
        description: "whether to build image or not"
        required: true
        default: no
        type: choice
        options:
        - yes
        - no
env:
  AWS_ACCESS_KEY: ${{secrets.AWS_ACCESS_KEY_ID}}
  AWS_SECRET_KEY: ${{secrets.AWS_SECRET_ACCESS_KEY}}
  REPO_NAME: ${{secrets.REPO_NAME}}
  CHOICE: ${{inputs.command}}
jobs:
  first_job:
    runs-on: ubuntu-latest
    if: inputs.dockerpush == 'yes'
    steps:
      - name: Clone Repo
        uses: actions/checkout@main
      - name: Configure AWS
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-south-1
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
      - name: Build Docker Image
        run: docker build -t notification-app .
      - name: Push Docker image to amazon ecr
        env:
          ECR_REGISTRY: ${{steps.login-ecr.outputs.registry}}
        run: |
             docker tag notification-app:latest $ECR_REGISTRY/$REPO_NAME:notification-app
             docker push $ECR_REGISTRY/$REPO_NAME:notification-app
  second_job:
    if: inputs.command == ${{'apply' || 'destroy'}}
    runs-on: ubuntu-latest
    steps: 
    - name: Clone Repo
      uses: actions/checkout@main
    - name: Build Infrastructure
      run: |
           cd terraform
           terraform init
           terraform plan -var="access_key=$AWS_ACCESS_KEY" -var="secret_key=$AWS_SECRET_KEY" -var="region=ap-south-1"
           terraform $CHOICE --auto-approve -var="access_key=$AWS_ACCESS_KEY" -var="secret_key=$AWS_SECRET_KEY" -var="region=ap-south-1"
